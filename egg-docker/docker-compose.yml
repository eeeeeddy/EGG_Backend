version: "3.9"
services:

#  mysql:
#    image: mysql:latest
#    container_name: egg-mysql
#    environment:
#      MYSQL_ROOT_PASSWORD: qwer1234
#      MYSQL_DATABASE: final
#    ports:
#      - "3306:3306"
#    volumes:
#      - ./mysql/conf.d:/etc/mysql/conf.d # MySQL 설정 파일 위치
#    networks:
#      - sql-network

#  springboot:
#    container_name: egg-springboot
#    restart: on-failure
#    build:
#      context: ./
#      dockerfile: Dockerfile
#    ports:
#      - "8080:8080"
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:mysql://egg-mysql:3306/users_db?useSSL=false&allowPublicKeyRetrieval=true
#      SPRING_DATASOURCE_USERNAME: "root"
#      SPRING_DATASOURCE_PASSWORD: "qwer1234"
#    depends_on:
#      - mysql
#    networks:
#      - sql-network

  redis:
    image: redis:latest
    container_name: egg-redis
    ports:
      - 6379:6379
    volumes:
      - ./redis/data:/data
      - ./redis/conf/redis.conf:/usr/local/conf/redis.conf
    labels:
      - "name=redis"
      - "mode=standalone"
    restart: always
    command: redis-server /usr/local/conf/redis.conf

  nginx:
    image: nginx
    container_name: egg-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/servers:/etc/nginx/servers:ro
    command: [ nginx-debug, '-g', 'daemon off;' ]

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.13
    container_name: egg-elasticsearch
    environment:
      - node.name=es-node
      - cluster.name=search-cluster
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
      - xpack.security.transport.ssl.enabled=false
    ports:
      - 9200:9200 # https
      - 9300:9300 # tcp
    networks:
      - es-bridge

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.13
    container_name: egg-kibana
    environment:
      SERVER_NAME: kibana
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - 5601:5601
    # Elasticsearch Start Dependency
    depends_on:
      - elasticsearch
    networks:
      - es-bridge


networks:
  es-bridge:
    driver: bridge
#  sql-network: